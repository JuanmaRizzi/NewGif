{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","propType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4NAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAiBhD,OACE,uBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKhB,UACE,6BAAMD,IACN,uBACEQ,KAAK,OACLC,MAAOT,EACPU,SApBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,cAyB3BZ,EAAYe,SAAW,CAErBd,cAAee,IAAUC,KAAKC,Y,mCClCnBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,gDACgCC,UACnDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAedM,GAfc,4CAAH,sDAiBpBT,ICZO,ICHMgB,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEvC,OADAc,QAAQC,IAAI,CAAEN,KAAIC,QAAOV,QAEvB,sBAAKgB,UAAU,yCAAf,UACE,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,kCAAKA,EAAL,WCFOS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,EFAb,SAACA,GAAc,IAAD,EACdlB,mBAAS,CACjCyB,KAAM,GACNe,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAyBxC,OAnBAC,qBAAU,WACR1B,EAAQC,GAAU0B,MAAK,SAACC,GACtBC,YAAW,WACTZ,QAAQC,IAAIU,GACZH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,MAEV,UAEJ,CAACtB,IASGuB,EExB2BM,CAAa7B,GAAjCa,EADyB,EAC/BN,KAAce,EADiB,EACjBA,QAUtB,OATAN,QAAQC,IAAIK,GAUV,qCACE,qBAAIJ,UAAU,4DAAd,UACG,IACAlB,KAKFsB,GACC,mBAAGJ,UAAU,kEAAb,yBAIF,qBAAKA,UAAU,YAAf,SAWGL,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aCtCnBmB,EAAe,WAAM,MAGIhD,mBAAS,CAAC,WAHd,mBAGzBiD,EAHyB,KAGblD,EAHa,KAShC,OACE,qCACE,oBAAIqC,UAAU,aAAd,0BACA,cAAC,EAAD,CAAarC,cAAeA,IAC3B,GAID,6BACGkD,EAAWtB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YClBxBgC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.b5321360.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  //se destructuran los argumentos del componente. Lo que sea que hayamos enviado en el componente AddCategory lo recibiremos aca como argumetp\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const HandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(\"submit hecho\");\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={HandleSubmit}>\r\n      <h1 >{inputValue}</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      ></input>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propType = {\r\n  //esta es la definiocion delpropTypes; por eso la primera p es con minusc\r\n  setCategories: PropTypes.func.isRequired, // aca etamos haciendo referencia al paquete PropTypes que importamos; por eso las dos co mayuacula\r\n};\r\n","export const getGifs = async (category) => {\r\n  const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}Z&limit=8&api_key=ID4lEzDkUuI7QzuF8T4LmUtegZIFNowY`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json(); //desestructuramos la data\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\ngetGifs();\r\n","// el use en el nombre de este archivo nos indica de que e sun hook; en este caso un \"custom hook\" Hay otro shooks por fececto, por ejemplo el useState. Recordar que los hooks son simplemente funciones\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setTimeout(() => {\r\n        console.log(imgs);\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n      }, 3000);\r\n    });\r\n  }, [category]);\r\n\r\n  // setTimeout(() => {\r\n  //   setState({\r\n  //     data: [1, 2, 3, 4],\r\n  //     loading: false,\r\n  //   });\r\n  // }, 3000);\r\n\r\n  return state; // devuielve el data y el loading:true; el nombre(state) no es importante\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  console.log({ id, title, url });\r\n  return (\r\n    <div className=\"card animate__animated animate__shakeY\">\r\n      <img src={url} alt={title} />\r\n      <p> {title} </p>\r\n    </div>\r\n  );\r\n};\r\n","import React /* , { useState, useEffect }*/ from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n// import { getGifs } from \"../helpers/getGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n  console.log(loading);\r\n\r\n  /*const [images, setImages] = useState([]);\r\n \r\n  useEffect(() => {\r\n    //useEffect e sun hook que recibe la una funcion(getGifs() que es la funcion que queremos limitar)\r\n    getGifs(category).then((imgs) => setImages(imgs));\r\n  }, [category]); //luego, el segundo argumenmto es un \"arreglo de dependencias\" En este caso, al estar vacio el array; quiere decir que no tiene ninguna dependencia\r\n*/\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__bounceInLeft animate__delay-2s\">\r\n        {\" \"}\r\n        {category}\r\n      </h3>\r\n\r\n      {/* {loading ? \"cargando...\" : \"data cargada\"} */}\r\n\r\n      {loading && (\r\n        <p className=\" webSearch animate__animated animate__hinge animate__delay-0.5s\">\r\n          cargando...\r\n        </p>\r\n      )}\r\n      <div className=\"card-grid\">\r\n        {/* <ol>\r\n         {images.map((img) => (\r\n          <li key={img.id}>{img.title}</li>\r\n        ))} //esta es una forma de hacerlo; tb lo podemos desestructurar: \r\n\r\n        {images.map(({ id, title }) => (\r\n          <li key={id}>{title}</li>\r\n        ))}  //lo vamos a ahecr finalemnet usando el componente GifGridItem\r\n      </ol>   */}\r\n\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  //const categories = [\"Dragon Ball\", \"DBZ\", \"Saint-Seiya\"];\r\n\r\n  const [categories, setCategories] = useState([\"Vegeta\"]);\r\n\r\n  // const handleAdd = (event) => {\r\n  //   setCategories([...categories, \"Pokemon\"]);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"main-Title\">GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      {\"\"}\r\n      {/*aca obligamos a que usen nuestros complementos d el aforma que nosotros queremos}\r\n      <hr />\r\n      {/* <button onClick={handleAdd}>Agregar</button> */}\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}